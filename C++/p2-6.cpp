/* 例2-6 给出输入三角形的3个顶点坐标，计算3条边的长度的面向对象的算法描述。
 * 学生：学Bug
 * 微信公众号：ByStudyHard
 *
 * 首先从顶点坐标考虑，顶点坐标就是一个点，通过这个点，可以得到它与另一个点的距离，从而将 平面 抽象为 点对象的集和。三角形的3个顶点就是点类的3个实际对象。求三角形的3条边长，就是求每两个点对象之间的距离。因此，重点应放在如何描述这个点类上。
 * 设计Point类，这个类的属性具有两个坐标值（x，y）。它表现的行为是能初始化这个点的属性值，对于不同的点的对象，具有不同的属性值（也就是不同的x和y值）。这个点类能向外界提供自己的属性值，并能计算它与另一个对象之间的距离。
 * 		————————————————————————
 * 			类名Point	
 * 		————————————————————————
 * 		      具有的属性x和y
 * 		————————————————————————
 * 		提供的操作
 * 		Point用来初始化对象
 * 		Getlength用来求值
 * 		Getx和Gety返回x和y
 * 		————————————————————————
 * 		   图2.2 Point类示意图
 *
 * 算法描述为：
 * 输入：3个类的对象。
 * 输出：任意两个对象之间的距离。
 * 算法设计：
 * 	设计类Point
 * 		类的结构图如上图2.2
 * 	产生3个对象
 * 		PointA（x1，y1）← 对象A
 * 		PointB（x2，y2）← 对象B
 * 		PointC（x3，y3）← 对象C
 * 	计算对象之间的距离
 * 		AB ← A.Getlength(B)
 * 		AC ← A.Getlength(C)
 * 		BC ← B.Getlength(C)
 * 	输出（AB，AC，BC）	*/
#include <iostream>
using namespace std;
int main()				//新的标准写法
{
	
	return 0;			//新的标准写法
}
